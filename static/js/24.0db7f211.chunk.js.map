{"version":3,"file":"static/js/24.0db7f211.chunk.js","mappings":"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","sources":["webpack://wallet-app/./src/components/Balance/Balance.module.css?b75c","components/Balance/Balance.jsx","webpack://wallet-app/./src/components/Chart/Chart.module.css?6073","components/Chart/Chart.jsx","webpack://wallet-app/./src/components/DropdownMenu/DropdownMenu.module.css?2bdd","icons/arrow.svg","components/DropdownMenu/DropdownMenu.jsx","webpack://wallet-app/./src/components/Category/CategoryItem.module.css?0ddc","components/Category/CategoryItem.jsx","webpack://wallet-app/./src/pages/Statistic/Statistic.module.css?0b55","pages/Statistic/Statistic.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"balanceField\":\"Balance_balanceField__LXnRa\",\"title\":\"Balance_title__jYFRk\",\"amount\":\"Balance_amount__vp6eZ\"};","import styles from './Balance.module.css';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Balance = (props) => {\r\n  const transactions = props.balance;\r\n\r\n  const [totalSum, setTotalSum] = useState(0);\r\n\r\n  const calculateTotalSum = (transactions) => {\r\n    let sum = 0;\r\n\r\n    // Sprawdzenie, czy transactions jest zdefiniowane i jest tablicą\r\n    if (Array.isArray(transactions)) {\r\n      transactions.forEach((transaction) => {\r\n        const sumValue = parseFloat(transaction.Sum);\r\n        sum += transaction.Type === '-' ? -sumValue : sumValue;\r\n      });\r\n    }\r\n\r\n    return sum.toFixed(2);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTotalSum(calculateTotalSum(transactions));\r\n  }, [transactions]);\r\n\r\n  return (\r\n    <div className={styles.balanceField}>\r\n      <span className={styles.title}>YOUR BALANCE</span>\r\n      <span className={styles.amount}>zł {totalSum}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"diagramContainer\":\"Chart_diagramContainer__QZ7to\",\"diagramValue\":\"Chart_diagramValue__E8171\"};","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\nimport css from \"./Chart.module.css\";\r\n\r\nconst ChartComponent = ({ chartData }) => {\r\n  const chartRef = useRef(null);\r\n  const chartInstance = useRef(null);\r\n  const [canvasDimensions, setCanvasDimensions] = useState({ width: 0, height: 0 });\r\n\r\n  useEffect(() => {\r\n    if (chartInstance.current) {\r\n      chartInstance.current.destroy();\r\n    }\r\n\r\n    const myChartRef = chartRef.current.getContext(\"2d\");\r\n\r\n    chartInstance.current = new Chart(myChartRef, {\r\n      type: \"doughnut\",\r\n      data: chartData,\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n          legend: {\r\n            display: false,\r\n          },\r\n          tooltip: {\r\n            enabled: false,\r\n          },\r\n        },\r\n        cutout: \"70%\",\r\n      },\r\n    });\r\n\r\n    const canvasWidth = chartRef.current.width;\r\n    const canvasHeight = chartRef.current.height;\r\n\r\n    setCanvasDimensions({ width: canvasWidth, height: canvasHeight });\r\n\r\n    return () => {\r\n      if (chartInstance.current) {\r\n        chartInstance.current.destroy();\r\n      }\r\n    };\r\n  }, [chartData]);\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }} className={css.diagramContainer}>\r\n      <canvas ref={chartRef}></canvas>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          textAlign: \"center\",\r\n          width: \"100%\",\r\n          color: \"#000\",\r\n        }}\r\n      >\r\n        <div style={{ fontSize: \"18px\", fontWeight: \"700\" }} className={css.diagramValue}>\r\n          zł {chartData.datasets[0].data.reduce((sum, dataPoint) => sum + dataPoint, 0) || 0}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputWithArrow\":\"DropdownMenu_inputWithArrow__+l5td\",\"statisticContent_input\":\"DropdownMenu_statisticContent_input__2mBx3\",\"selectMonthInput\":\"DropdownMenu_selectMonthInput__m0siu\",\"selectYearInput\":\"DropdownMenu_selectYearInput__Wk4Eb\",\"arrowIcon\":\"DropdownMenu_arrowIcon__4++2O\",\"optionList\":\"DropdownMenu_optionList__jT2gz\",\"selectedOptionLi\":\"DropdownMenu_selectedOptionLi__jKcMa\",\"optionLi\":\"DropdownMenu_optionLi__ahpIl\"};","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 11,\n    viewBox: \"0 0 20 11\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 20\",\n    d: \"M1 1L10 10L19 1\",\n    stroke: \"black\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/arrow.af3e97db49b7b844c7f8d9e990a12a45.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\r\nimport css from './DropdownMenu.module.css';\r\nimport arrowIcon from '../../icons/arrow.svg';\r\n\r\nconst DropdownMenu = () => {\r\n  const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n\r\n  const years = ['2021', '2022', '2023'];\r\n\r\n  const [openDropdown, setOpenDropdown] = useState(null);\r\n  const [selectedMonth, setSelectedMonth] = useState('January');\r\n  const [selectedYear, setSelectedYear] = useState('2023');\r\n\r\n\r\n\r\n  const toggleDropdown = (dropdown) => {\r\n    setOpenDropdown(openDropdown === dropdown ? null : dropdown);\r\n  };\r\n\r\n  return (\r\n    <div className={css.statisticContent}>\r\n      {/* Month */}\r\n      <div className={css.statisticContent_input}>\r\n        <div className={css.select}>\r\n          <div onClick={() => toggleDropdown('month')} className={css.timeBox}>\r\n            <div className={css.inputWithArrow}>\r\n              <input\r\n                className={css.selectMonthInput}\r\n                value={selectedMonth}\r\n                readOnly\r\n              />\r\n              <img src={arrowIcon} alt=\"arrow icon\" className={css.arrowIcon} />\r\n            </div>\r\n          </div>\r\n          {openDropdown === 'month' && (\r\n            <ul className={css.optionList}>\r\n              {months.map((month) => (\r\n                <li\r\n                  key={month}\r\n                  onClick={() => {\r\n                    setSelectedMonth(month);\r\n                    setOpenDropdown(null);\r\n                  }}\r\n                  className={\r\n                    selectedMonth === month\r\n                      ? css.selectedOptionLi\r\n                      : css.optionLi\r\n                  }\r\n                >\r\n                  {month}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        {/* Year */}\r\n        <div className={css.select}>\r\n          <div onClick={() => toggleDropdown('year')} className={css.timeBox}>\r\n            <div className={css.inputWithArrow}>\r\n              <input\r\n                className={`${css.selectMonthInput} ${css.selectYearInput}`}\r\n                value={selectedYear}\r\n                readOnly\r\n              />\r\n              <img src={arrowIcon} alt=\"arrow icon\" className={css.arrowIcon} />\r\n            </div>\r\n          </div>\r\n          {openDropdown === 'year' && (\r\n            <ul className={css.optionList}>\r\n              {years.map((year) => (\r\n                <li\r\n                  key={year}\r\n                  onClick={() => {\r\n                    setSelectedYear(year);\r\n                    setOpenDropdown(null);\r\n                  }}\r\n                  className={\r\n                    selectedYear === year ? css.selectedOptionLi : css.optionLi\r\n                  }\r\n                >\r\n                  {year}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropdownMenu;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"categoryContainer\":\"CategoryItem_categoryContainer__mIzSw\",\"categoryTitle\":\"CategoryItem_categoryTitle__wnlct\",\"categoryList\":\"CategoryItem_categoryList__xd8Rt\",\"categoryListEl\":\"CategoryItem_categoryListEl__sD9b9\",\"category\":\"CategoryItem_category__DYKw9\",\"accountBalanceContainer\":\"CategoryItem_accountBalanceContainer__Q-a5f\",\"accountBalanceList\":\"CategoryItem_accountBalanceList__7ZRmG\",\"expenseText\":\"CategoryItem_expenseText__WMc+1\",\"incomeText\":\"CategoryItem_incomeText__RpoMP\",\"expenseValue\":\"CategoryItem_expenseValue__fA9Zu\",\"incomeValue\":\"CategoryItem_incomeValue__ICq5v\"};","import React from 'react';\r\nimport css from './CategoryItem.module.css';\r\n\r\nconst CategoryItem = ({\r\n  labels,\r\n  datasets,\r\n  accountBalance,\r\n  categoryData,\r\n  expenses,\r\n  income,\r\n}) => {\r\n  const totalBalance = datasets[0].data.reduce(\r\n    (total, amount) => total + amount,\r\n    0,\r\n  );\r\n\r\n  return (\r\n    <div className={css.categoryContainer}>\r\n      <div className={css.categoryTitle}>\r\n        <h3>Category</h3>\r\n        <h3>Sum</h3>\r\n      </div>\r\n      <div className={css.categoryList}>\r\n        <ul>\r\n          {labels.map((label, index) => (\r\n            <li key={index} className={css.categoryListEl}>\r\n              <span\r\n                className={css.categoryColor}\r\n                style={{\r\n                  backgroundColor: datasets[0].backgroundColor[index],\r\n                  width: '24px',\r\n                  height: '24px',\r\n                  borderRadius: '2px',\r\n                  display: 'inline-block',\r\n                  marginRight: '16px',\r\n                }}\r\n              ></span>\r\n              <div className={css.category}>\r\n                <div className={css.categoryName}>{label}:</div>\r\n                <div className={css.categoryAmount}>\r\n                  {datasets[0].data[index]}\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* total balance */}\r\n      <div className={css.accountBalanceContainer}>\r\n        <ul className={css.accountBalanceList}>\r\n          <li>\r\n            <span className={css.expenseText}>Expenses:</span>\r\n            <span className={css.expenseValue}>\r\n              {expenses}\r\n              {categoryData.reduce(\r\n                (total, category) => total + category.amount,\r\n                0,\r\n              )}\r\n            </span>\r\n          </li>\r\n          <li>\r\n            <span className={css.incomeText}>Income:</span>\r\n            <span className={css.incomeValue}>\r\n              {accountBalance}\r\n              {income()}\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"statistic_container\":\"Statistic_statistic_container__0iupu\",\"tabletViewBox1\":\"Statistic_tabletViewBox1__xdjVa\",\"tabletViewBox2\":\"Statistic_tabletViewBox2__nU7HH\",\"tabletViewBox3\":\"Statistic_tabletViewBox3__W9WEH\",\"elipse1\":\"Statistic_elipse1__8p1ZQ\",\"elipse2\":\"Statistic_elipse2__QS81m\",\"statistic_containerActual\":\"Statistic_statistic_containerActual__9Gi7-\",\"statistic_container_left\":\"Statistic_statistic_container_left__Y567f\",\"statistic_container_right\":\"Statistic_statistic_container_right__oeM0D\",\"statistic_container_desktop_right\":\"Statistic_statistic_container_desktop_right__m9ndc\"};","import React, { useState, useMemo, useEffect } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport Navigation from '../../components/Navigation/Navigation';\r\nimport ChartComponent from '../../components/Chart/Chart';\r\nimport DropdownMenu from '../../components/DropdownMenu/DropdownMenu';\r\nimport CategoryItem from '../../components/Category/CategoryItem';\r\nimport Balance from '../../components/Balance/Balance';\r\nimport Curriences from '../../components/Curriences/Curriences';\r\nimport css from './Statistic.module.css';\r\nimport elipse1 from '../../icons/elipse1.svg';\r\nimport elipse2 from '../../icons/elipse2.svg';\r\n\r\nconst accountBalanceKey = 'accountBalance';\r\nconst expensesKey = 'expenses';\r\n\r\nconst Statistic = () => {\r\n  const balance = JSON.parse(localStorage.getItem('transactions'));\r\n\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize();\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  const calculateTotalExpense = (transactions, category) => {\r\n    return transactions.reduce((sum, transaction) => {\r\n      if (transaction.Category === category && transaction.Type === '-') {\r\n        return sum + parseFloat(transaction.Sum);\r\n      }\r\n      return sum;\r\n    }, 0);\r\n  };\r\n\r\n  const categoryData = useMemo(\r\n    () => [\r\n      {\r\n        category: 'Main Expenses',\r\n        amount: calculateTotalExpense(balance, 'Main Expenses'),\r\n      },\r\n      {\r\n        category: 'Products',\r\n        amount: calculateTotalExpense(balance, 'Leisure'),\r\n      },\r\n      { category: 'Car', amount: calculateTotalExpense(balance, 'Car') },\r\n      {\r\n        category: 'Self care',\r\n        amount: calculateTotalExpense(balance, 'Self care'),\r\n      },\r\n      {\r\n        category: 'Child care',\r\n        amount: calculateTotalExpense(balance, 'Child care'),\r\n      },\r\n      {\r\n        category: 'Household products',\r\n        amount: calculateTotalExpense(balance, 'Household products'),\r\n      },\r\n      {\r\n        category: 'Education',\r\n        amount: calculateTotalExpense(balance, 'Education'),\r\n      },\r\n      {\r\n        category: 'Leisure',\r\n        amount: calculateTotalExpense(balance, 'Leisure'),\r\n      },\r\n      {\r\n        category: 'Other expenses',\r\n        amount: calculateTotalExpense(balance, 'Other expenses'),\r\n      },\r\n    ],\r\n    [],\r\n  );\r\n\r\n  const [selectedMonth, setSelectedMonth] = useState('January');\r\n\r\n  const shouldRenderCurriences = windowWidth > 767;\r\n\r\n  // LOCAL STORAGE\r\n  const [accountBalance, setAccountBalance] = useState(() => {\r\n    const storedBalance = localStorage.getItem(accountBalanceKey);\r\n    return storedBalance ? parseFloat(storedBalance) : 2400;\r\n  });\r\n\r\n  const [expenses, setExpenses] = useState(() => {\r\n    const storedExpenses = localStorage.getItem(expensesKey);\r\n    return storedExpenses ? JSON.parse(storedExpenses) : [];\r\n  });\r\n\r\n  const income = () => {\r\n    return balance.reduce((sum, transaction) => {\r\n      if (transaction.Type === '+') {\r\n        return sum + parseFloat(transaction.Sum);\r\n      }\r\n      return sum;\r\n    }, 0);\r\n  };\r\n\r\n  const handleMonthSelect = (month) => {\r\n    setSelectedMonth(month);\r\n\r\n    const newBalance = calculateNewBalance();\r\n    setAccountBalance(newBalance);\r\n    localStorage.setItem(accountBalanceKey, newBalance.toString());\r\n  };\r\n\r\n  const calculateNewBalance = () => {\r\n    const currentBalance = accountBalance;\r\n    const expensesTotal = expenses.reduce(\r\n      (total, expense) => total + expense.amount,\r\n      0,\r\n    );\r\n    const newBalance = currentBalance - expensesTotal;\r\n    return { newBalance, expensesTotal };\r\n  };\r\n\r\n  const chartData = useMemo(() => {\r\n    const expensesTotal = expenses.reduce(\r\n      (total, expense) => total + expense.amount,\r\n      0,\r\n    );\r\n    return {\r\n      datasets: [\r\n        {\r\n          data: categoryData.map((category) => category.amount),\r\n          backgroundColor: [\r\n            '#FED057',\r\n            '#FFD8D0',\r\n            '#FD9498',\r\n            '#C5BAFF',\r\n            '#6E78E8',\r\n            '#4A56E2',\r\n            '#81E1FF',\r\n            '#24CCA7',\r\n            '#00AD84',\r\n          ],\r\n        },\r\n      ],\r\n      labels: categoryData.map((category) => category.category),\r\n      expensesTotal: expensesTotal,\r\n    };\r\n  }, [categoryData, expenses]);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className={css.statistic_container}>\r\n        <div className={css.statistic_container_desktop_left}>\r\n          {windowWidth < 767 && <Navigation />}\r\n          {shouldRenderCurriences ? (\r\n            <div className={css.tabletViewBox1}>\r\n              <div className={css.tabletViewBox2}>\r\n                <Navigation />\r\n                <Balance balance={balance} />\r\n              </div>\r\n              <div className={css.tabletViewBox3}>\r\n                <Curriences />\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div className={css.statistic_container_desktop_right}>\r\n          <div className={css.statistic_containerActual}>\r\n            <div className={css.statistic_container_left}>\r\n              <div className={css.h1_container}>\r\n                <h1>Statistics</h1>\r\n              </div>\r\n\r\n              <ChartComponent\r\n                chartData={{ ...chartData, accountBalance: accountBalance }}\r\n              />\r\n            </div>\r\n\r\n            <div className={css.statistic_container_right}>\r\n              <DropdownMenu\r\n                selected={selectedMonth}\r\n                options={[\r\n                  'January',\r\n                  'February',\r\n                  'March',\r\n                  'April',\r\n                  'May',\r\n                  'June',\r\n                  'July',\r\n                  'August',\r\n                  'September',\r\n                  'October',\r\n                  'November',\r\n                  'December',\r\n                ]}\r\n                onOptionSelect={handleMonthSelect}\r\n              />\r\n\r\n              <CategoryItem\r\n                labels={chartData.labels}\r\n                datasets={chartData.datasets}\r\n                expenses={expenses}\r\n                income={income}\r\n                categoryData={categoryData}\r\n              />\r\n              <div className={css.bg}></div>\r\n              <img className={css.elipse1} src={elipse1} alt=\"elipse orange\" />\r\n              <img className={css.elipse2} src={elipse2} alt=\"elipse purple\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistic;\r\n"],"names":["props","transactions","balance","_useState","useState","_useState2","_slicedToArray","totalSum","setTotalSum","useEffect","sum","Array","isArray","forEach","transaction","sumValue","parseFloat","Sum","Type","toFixed","calculateTotalSum","_jsxs","className","styles","children","_jsx","_ref","chartData","chartRef","useRef","chartInstance","width","height","setCanvasDimensions","current","destroy","myChartRef","getContext","Chart","type","data","options","responsive","maintainAspectRatio","plugins","legend","display","tooltip","enabled","cutout","canvasWidth","canvasHeight","style","position","css","ref","top","left","transform","textAlign","color","fontSize","fontWeight","datasets","reduce","dataPoint","openDropdown","setOpenDropdown","_useState3","_useState4","selectedMonth","setSelectedMonth","_useState5","_useState6","selectedYear","setSelectedYear","toggleDropdown","dropdown","statisticContent","statisticContent_input","select","onClick","timeBox","inputWithArrow","selectMonthInput","value","readOnly","src","arrowIcon","alt","optionList","map","month","selectedOptionLi","optionLi","concat","selectYearInput","year","labels","accountBalance","categoryData","expenses","income","total","amount","categoryContainer","categoryTitle","categoryList","label","index","categoryListEl","categoryColor","backgroundColor","borderRadius","marginRight","category","categoryName","categoryAmount","accountBalanceContainer","accountBalanceList","expenseText","expenseValue","incomeText","incomeValue","accountBalanceKey","JSON","parse","localStorage","getItem","window","innerWidth","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","calculateTotalExpense","Category","useMemo","shouldRenderCurriences","storedBalance","setAccountBalance","_useState7","storedExpenses","_useState8","calculateNewBalance","currentBalance","expensesTotal","expense","newBalance","Header","statistic_container","statistic_container_desktop_left","Navigation","tabletViewBox1","tabletViewBox2","Balance","tabletViewBox3","Curriences","statistic_container_desktop_right","statistic_containerActual","statistic_container_left","h1_container","ChartComponent","_objectSpread","statistic_container_right","DropdownMenu","selected","onOptionSelect","setItem","toString","CategoryItem","bg","elipse1","elipse2"],"sourceRoot":""}